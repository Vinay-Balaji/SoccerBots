#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include <Grove_Motor_Driver_TB6612FNG.h>

RF24 radio(9, 10); // CE, CSN
const byte address[6] = "00002";
boolean button_state = 0;
int xValue;
int yValue;
int sendValue = 15;

const int AIN1 = 4;
const int AIN2 = 7;
const int PWMA = 6;

const int PWMB = 5;
const int BIN2 = 3;
const int BIN1 = 2;

int switchPin = 0;

const int driveTime = 20;
const int turnTime = 8;

String botDirection;
String distance;

int firstKeyPin = 2;
int secondKeyPin = 3;

void setup() {    // put your setup code here, to run once:
    pinMode(firstKeyPin, INPUT_PULLUP);
  pinMode(secondKeyPin, INPUT_PULLUP);
  //set the motor control pins as outputs
  pinMode(AIN1, OUTPUT);
  pinMode(AIN2, OUTPUT);
  pinMode(PWMA, OUTPUT);

  pinMode(BIN1, OUTPUT);
  pinMode(BIN2, OUTPUT);
  pinMode(PWMB, OUTPUT);

  Serial.begin(9600);
  radio.begin();
  radio.begin();
  radio.openReadingPipe(0, address);   //Setting the address at which we will receive the data
  radio.setPALevel(RF24_PA_MIN);       //You can set this as minimum or maximum depending on the distance between the transmitter and receiver.
  radio.startListening();              //This sets the module as receiver

  Serial.begin(9600);

}

void loop() {     // put your main code here, to run repeatedly:

if (radio.available())
  {

    radio.read(&sendValue, sizeof(sendValue));
    Serial.println(sendValue);
    delay(10);
  }

  if (sendValue == 1) {
    leftMotor(240);
    rightMotor(80);
    Serial.println("sendValue: ");
    Serial.println(sendValue);
  } else if (sendValue == 3){
    leftMotor(80);
    rightMotor(240);
    Serial.println("sendValue: ");
    Serial.println(sendValue);
  } else if (sendValue == 2) {
    leftMotor(240);
    rightMotor(240);
    Serial.println("sendValue: ");
    Serial.println(sendValue);
  } else if (sendValue == 4) {
    leftMotor(240);
    rightMotor(-240);
    Serial.println("sendValue: ");
    Serial.println(sendValue);
  } else if (sendValue == 6) {
    leftMotor(-240);
    rightMotor(240);
    Serial.println("sendValue: ");
    Serial.println(sendValue);
  } else if (sendValue == 7) {
    leftMotor(240);
    rightMotor(-240);
  } else if (sendValue == 9) {
    leftMotor(-240);
    rightMotor(240);
  } else if (sendValue == 10) {
    leftMotor(-240);
    rightMotor(-80);
    Serial.println("sendValue: ");
    Serial.println(sendValue);
  } else if (sendValue == 12) {
    leftMotor(-80);
    rightMotor(-240);
    Serial.println("sendValue: ");
    Serial.println(sendValue);
  } else if (sendValue == 11) {
    leftMotor(-240);
    rightMotor(-240);
    Serial.println("sendValue: ");
    Serial.println(sendValue);
  } else if (sendValue == 0){
    leftMotor(0);
    rightMotor(0);
    Serial.println("sendValue: ");
    Serial.println(sendValue);
  }

  delay(100);

}

/**************************************/
void rightMotor(int motorSpeed)                       //function for driving the right motor
{
  if (motorSpeed > 0)                                 //if the motor should drive forward (positive speed)
  {
    digitalWrite(AIN1, HIGH);                         //set pin 1 to high
    digitalWrite(AIN2, LOW);                          //set pin 2 to low
  }
  else if (motorSpeed < 0)                            //if the motor should drive backward (negative speed)
  {
    digitalWrite(AIN1, LOW);                          //set pin 1 to low
    digitalWrite(AIN2, HIGH);                         //set pin 2 to high
  }
  else                                                //if the motor should stop
  {
    digitalWrite(AIN1, LOW);                          //set pin 1 to low
    digitalWrite(AIN2, LOW);                          //set pin 2 to low
  }
  analogWrite(PWMA, abs(motorSpeed));                 //now that the motor direction is set, drive it at the entered speed
}

/********************************************************************************/
void leftMotor(int motorSpeed)                        //function for driving the left motor
{
  if (motorSpeed > 0)                                 //if the motor should drive forward (positive speed)
  {
    digitalWrite(BIN1, HIGH);                         //set pin 1 to high
    digitalWrite(BIN2, LOW);                          //set pin 2 to low
  }
  else if (motorSpeed < 0)                            //if the motor should drive backward (negative speed)
  {
    digitalWrite(BIN1, LOW);                          //set pin 1 to low
    digitalWrite(BIN2, HIGH);                         //set pin 2 to high
  }
  else                                                //if the motor should stop
  {
    digitalWrite(BIN1, LOW);                          //set pin 1 to low
    digitalWrite(BIN2, LOW);                          //set pin 2 to low
  }
  analogWrite(PWMB, abs(motorSpeed));                 //now that the motor direction is set, drive it at the entered speed
}
